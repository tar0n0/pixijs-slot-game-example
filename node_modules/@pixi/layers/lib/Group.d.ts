import { utils } from '@pixi/core';
import type { DisplayObject } from '@pixi/display';
import type { Layer } from './Layer';
import type { Stage } from './Stage';
export declare class Group extends utils.EventEmitter {
    static _layerUpdateId: number;
    useRenderTexture: boolean;
    useDoubleBuffer: boolean;
    sortPriority: number;
    clearColor: ArrayLike<number>;
    canDrawWithoutLayer: boolean;
    canDrawInParentStage: boolean;
    zIndex: number;
    enableSort: boolean;
    private _activeLayer;
    private _activeStage;
    _activeChildren: Array<DisplayObject>;
    private _lastUpdateId;
    constructor(zIndex?: number, sorting?: boolean | ((displayObject: DisplayObject) => void));
    doSort(layer: Layer, sorted: Array<DisplayObject>): void;
    private static compareZIndex;
    private clear;
    _resolveChildDisplayObject(stage: Stage, displayObject: DisplayObject): void;
    _resolveLayer(stage: Stage, layer: Layer): void;
    private check;
    private static _lastLayerConflict;
    private static conflict;
}
