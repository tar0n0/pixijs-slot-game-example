import { Circle } from '@pixi/core';
/**
 * PixiJS namespace.
 * @namespace PIXI
 */
/**
 * PixiJS Lights namespace.
 * @namespace PIXI.lights
 */
/**
 * Circle class from PixiJS.
 * @class PIXI.Circle
 */
/**
 * Creates vertices and indices arrays to describe this circle.
 * @method PIXI.Circle#getMesh
 * @param {PIXI.Circle} shape -
 * @param {number} [totalSegments=40] - Total segments to build for the circle mesh.
 * @param vertices -
 * @param indices -
 *  `((totalSegments + 2) * 2)` or more. If not passed it is created for you.
 *  be `(totalSegments + 3)` or more. If not passed it is created for you.
 * @return {PIXI.lights.CircleMeshData} Object with verticies and indices arrays
 */
export declare function getCircleMesh(shape: Circle, totalSegments?: number, vertices?: Float32Array, indices?: Uint16Array): {
    vertices: Float32Array;
    indices: Uint16Array;
};
/**
 * @memberof PIXI.lights
 * @property {Float32Array} vertices - Vertices data
 * @property {Uint16Array} indices - Indices data
 */
export interface CircleMeshData {
    vertices: Float32Array;
    indices: Uint16Array;
}
