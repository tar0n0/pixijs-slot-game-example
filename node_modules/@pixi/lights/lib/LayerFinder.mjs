/*!
 * @pixi/lights - v4.0.0
 * Compiled Thu, 22 Dec 2022 00:00:35 UTC
 *
 * @pixi/lights is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 * 
 * Copyright 2017-2021, Ivan Popelyshev, All Rights Reserved
 */
import { Texture } from '@pixi/core';
import { Group } from '@pixi/layers';

const diffuseGroup = new Group(0, false);
const normalGroup = new Group(0, false);
const lightGroup = new Group(0, false);
diffuseGroup.useRenderTexture = true;
normalGroup.useRenderTexture = true;
const _LayerFinder = class {
  constructor() {
    this.lastLayer = null;
    this.diffuseTexture = null;
    this.normalTexture = null;
  }
  check(layer) {
    if (this.lastLayer === layer) {
      return;
    }
    this.lastLayer = layer;
    const stage = layer._activeStageParent;
    const layerAny = layer;
    this.diffuseTexture = Texture.WHITE;
    this.normalTexture = Texture.WHITE;
    if (layerAny.diffuseTexture && layerAny.normalTexture) {
      this.diffuseTexture = layerAny.diffuseTexture;
      this.normalTexture = layerAny.normalTexture;
    } else {
      for (let j = 0; j < stage._activeLayers.length; j++) {
        const texLayer = stage._activeLayers[j];
        if (texLayer.group === normalGroup) {
          this.normalTexture = texLayer.getRenderTexture();
        }
        if (texLayer.group === diffuseGroup) {
          this.diffuseTexture = texLayer.getRenderTexture();
        }
      }
    }
  }
};
let LayerFinder = _LayerFinder;
LayerFinder._instance = new _LayerFinder();

export { LayerFinder, diffuseGroup, lightGroup, normalGroup };
//# sourceMappingURL=LayerFinder.mjs.map
