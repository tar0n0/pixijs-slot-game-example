/*!
 * @pixi/lights - v4.0.0
 * Compiled Thu, 22 Dec 2022 00:00:35 UTC
 *
 * @pixi/lights is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 * 
 * Copyright 2017-2021, Ivan Popelyshev, All Rights Reserved
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Light = require('../light/Light.js');
var DirectionalLightShader = require('./DirectionalLightShader.js');

class DirectionalLight extends Light.Light {
  constructor(color = 16777215, brightness = 1, target) {
    super(color, brightness, new DirectionalLightShader.DirectionalLightShader());
    this.target = target;
  }
  syncShader(renderer) {
    super.syncShader(renderer);
    const shader = this.material;
    const vec = shader.uniforms.uLightDirection;
    const wt = this.worldTransform;
    const twt = this.target.worldTransform;
    let tx;
    let ty;
    if (twt) {
      tx = twt.tx;
      ty = twt.ty;
    } else {
      tx = this.target.x;
      ty = this.target.y;
    }
    vec.x = wt.tx - tx;
    vec.y = wt.ty - ty;
    const len = Math.sqrt(vec.x * vec.x + vec.y * vec.y);
    vec.x /= len;
    vec.y /= len;
  }
}

exports.DirectionalLight = DirectionalLight;
//# sourceMappingURL=DirectionalLight.js.map
