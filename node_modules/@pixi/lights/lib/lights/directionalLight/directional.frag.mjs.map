{"version":3,"file":"directional.frag.mjs","sources":["../../../src/lights/directionalLight/directional.frag.ts"],"sourcesContent":["import { combine, commonUniforms, computeDiffuse, computeVertexPosition, loadNormals } from '../shared';\n\nexport const directionalFrag = `precision highp float;\n\n// imports the common uniforms like samplers, and ambient/light color\n${commonUniforms}\n\nuniform vec2 uLightDirection;\n\nvoid main()\n{\n${computeVertexPosition}\n${loadNormals}\n\n    // the directional vector of the light\n    vec3 lightVector = vec3(uLightDirection, uLightHeight);\n\n    // compute Distance\n    float D = length(lightVector);\n\n${computeDiffuse}\n\n    // calculate attenuation\n    float attenuation = 1.0;\n\n${combine}\n}\n`;\n"],"names":[],"mappings":";;;;;;;;;;;MAEa,kBAAkB;AAAA;AAAA;AAAA,EAG7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA;AAAA;;;;"}