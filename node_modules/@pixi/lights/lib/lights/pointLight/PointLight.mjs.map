{"version":3,"file":"PointLight.mjs","sources":["../../../src/lights/pointLight/PointLight.ts"],"sourcesContent":["import { Light } from '../light/Light';\nimport { Circle, DRAW_MODES } from '@pixi/core';\nimport { getCircleMesh } from '../../mixins/Circle';\nimport { PointLightShader } from './PointLightShader';\n\n/**\n * @memberof PIXI.lights\n */\nexport class PointLight extends Light\n{\n    /**\n     * @param {number} [color=0xFFFFFF] - The color of the light.\n     * @param {number} [brightness=1] - The intensity of the light.\n     * @param {number} [radius=Infinity] - The distance the light reaches. You will likely need\n     *  to change the falloff of the light as well if you change this value. Infinity will\n     *  use the entire viewport as the drawing surface.\n     */\n    constructor(color = 0xFFFFFF, brightness = 1, radius = Infinity)\n    {\n        if (radius !== Infinity)\n        {\n            const shape = new Circle(0, 0, radius);\n            const { vertices, indices } = getCircleMesh(shape);\n\n            super(color, brightness, new PointLightShader(), vertices, indices);\n\n            this.drawMode = DRAW_MODES.TRIANGLE_FAN;\n        }\n        else\n        {\n            super(color, brightness, new PointLightShader());\n        }\n        this.shaderName = 'pointLightShader';\n        this.radius = radius;\n    }\n\n    /** Radius */\n    get radius(): number\n    {\n        return this.material.uniforms.uLightRadius;\n    }\n\n    set radius(value: number)\n    {\n        this.material.uniforms.uLightRadius = value;\n    }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;MAQa,mBAAmB,MAChC;AAAA,EAQI,YAAY,QAAQ,UAAU,aAAa,GAAG,SAAS,UACvD;AACI,QAAI,WAAW,UACf;AACI,YAAM,QAAQ,IAAI,OAAO,GAAG,GAAG,MAAM;AACrC,YAAM,EAAE,UAAU,YAAY,cAAc,KAAK;AAEjD,YAAM,OAAO,YAAY,IAAI,oBAAoB,UAAU,OAAO;AAElE,WAAK,WAAW,WAAW;AAAA,WAG/B;AACI,YAAM,OAAO,YAAY,IAAI,kBAAkB;AAAA;AAEnD,SAAK,aAAa;AAClB,SAAK,SAAS;AAAA;AAClB,EAGA,IAAI,SACJ;AACI,WAAO,KAAK,SAAS,SAAS;AAAA;AAClC,EAEA,IAAI,OAAO,OACX;AACI,SAAK,SAAS,SAAS,eAAe;AAAA;AAE9C;;;;"}