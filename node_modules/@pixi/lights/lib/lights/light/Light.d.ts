import { Renderer } from '@pixi/core';
import { Layer } from '@pixi/layers';
import { Mesh } from '@pixi/mesh';
import { LightShader } from './LightShader';
/**
 * Base light class.
 * @extends PIXI.Mesh
 * @memberof PIXI.lights
 */
export declare class Light extends Mesh {
    /** Light height */
    lightHeight: number;
    /** Brightness */
    brightness: number;
    /** Shader name */
    shaderName: string | null;
    /** Use Viewport Quad */
    readonly useViewportQuad: boolean;
    /**
     * @param {number} [color=0xFFFFFF] - The color of the light.
     * @param {number} [brightness=1] - The brightness of the light, in range [0, 1].
     * @param {PIXI.lights.LightShader} [material] -
     * @param {Float32Array} [vertices] -
     * @param {Uint16Array} [indices] -
     */
    constructor(color: number | undefined, brightness: number | undefined, material: LightShader, vertices?: Float32Array, indices?: Uint16Array);
    /**
     * The color of the lighting.
     */
    get color(): number;
    set color(val: number);
    /**
     * Falloff
     * @member {number[]}
     */
    get falloff(): ArrayLike<number>;
    set falloff(value: ArrayLike<number>);
    /**
     * Last layer
     * @type {PIXI.layers.Layer}
     */
    lastLayer: Layer | null;
    /**
     * Sync Shader
     * @param {PIXI.Renderer} renderer - Renderer
     */
    syncShader(renderer: Renderer): void;
    _renderDefault(renderer: Renderer): void;
}
