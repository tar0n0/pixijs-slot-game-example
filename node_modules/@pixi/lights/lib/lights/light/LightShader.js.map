{"version":3,"file":"LightShader.js","sources":["../../../src/lights/light/LightShader.ts"],"sourcesContent":["import { Texture, utils, Matrix } from '@pixi/core';\nimport { IMeshMaterialOptions, MeshMaterial } from '@pixi/mesh';\nimport { vert } from '../shared';\n\n/**\n * @extends PIXI.MeshMaterial\n * @memberof PIXI.lights\n */\nexport class LightShader extends MeshMaterial\n{\n    /**\n     * @param {PIXI.lights.IMeshMaterialOptions} [options] - Options to use.\n     */\n    constructor(options?: IMeshMaterialOptions)\n    {\n        const uniforms: utils.Dict<any> = {\n            translationMatrix: Matrix.IDENTITY.toArray(true),\n            // textures from the previously rendered FBOs\n            uNormalSampler: Texture.WHITE,\n            // size of the renderer viewport, CSS\n            uViewSize: new Float32Array(2),\n            // same, in PIXELS\n            uViewPixels: new Float32Array(2),\n            // light falloff attenuation coefficients\n            uLightFalloff: new Float32Array([0, 0, 0]),\n            // height of the light above the viewport\n            uLightHeight: 0.075,\n            uBrightness: 1.0,\n            uUseViewportQuad: true,\n        };\n\n        Object.assign(uniforms, options?.uniforms);\n\n        super(Texture.WHITE, { ...options, uniforms });\n    }\n\n    static defaultVertexSrc: string = vert;\n}\n"],"names":["MeshMaterial","Matrix","Texture","vert"],"mappings":";;;;;;;;;;;;;;;;;MAQa,oBAAoBA,kBACjC;AAAA,EAII,YAAY,SACZ;AACI,UAAM,WAA4B;AAAA,MAC9B,mBAAmBC,YAAO,SAAS,QAAQ,IAAI;AAAA,MAE/C,gBAAgBC,aAAQ;AAAA,MAExB,WAAW,IAAI,aAAa,CAAC;AAAA,MAE7B,aAAa,IAAI,aAAa,CAAC;AAAA,MAE/B,eAAe,IAAI,aAAa,CAAC,GAAG,GAAG,CAAC,CAAC;AAAA,MAEzC,cAAc;AAAA,MACd,aAAa;AAAA,MACb,kBAAkB;AAAA;AAGtB,WAAO,OAAO,UAAU,SAAS,QAAQ;AAEzC,UAAMA,aAAQ,OAAO,EAAE,GAAG,SAAS,UAAU;AAAA;AAIrD;AA7Ba,YA4BF,mBAA2BC;;;;"}