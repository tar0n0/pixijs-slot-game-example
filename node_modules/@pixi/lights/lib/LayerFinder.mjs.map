{"version":3,"file":"LayerFinder.mjs","sources":["../src/LayerFinder.ts"],"sourcesContent":["import { Texture } from '@pixi/core';\nimport { Group, Layer } from '@pixi/layers';\n\n/**\n * @memberof PIXI.lights\n * @static\n * @type {PIXI.layers.Group}\n */\nexport const diffuseGroup = new Group(0, false);\n\n/**\n * @memberof PIXI.lights\n * @static\n * @type {PIXI.layers.Group}\n */\nexport const normalGroup = new Group(0, false);\n\n/**\n * @memberof PIXI.lights\n * @static\n * @type {PIXI.layers.Group}\n */\nexport const lightGroup = new Group(0, false);\n\ndiffuseGroup.useRenderTexture = true;\nnormalGroup.useRenderTexture = true;\n\n/**\n * @memberof PIXI.lights\n */\nexport class LayerFinder\n{\n    /**\n     * Last layer\n     * @type {PIXI.layers.Layer}\n     */\n    lastLayer: Layer | null = null;\n    /**\n     * Diffuse texture\n     * @type {PIXI.Texture}\n     */\n    diffuseTexture: Texture | null = null;\n    /**\n     * Normal texture\n     * @type {PIXI.Texture}\n     */\n    normalTexture: Texture | null = null;\n\n    /**\n     * Check\n     * @param {PIXI.layers.Layer} layer -\n     */\n    check(layer: Layer): void\n    {\n        if (this.lastLayer === layer)\n        {\n            return;\n        }\n        this.lastLayer = layer;\n\n        const stage = layer._activeStageParent;\n        const layerAny = layer as any;\n\n        this.diffuseTexture = Texture.WHITE;\n        this.normalTexture = Texture.WHITE;\n\n        if (layerAny.diffuseTexture && layerAny.normalTexture)\n        {\n            this.diffuseTexture = layerAny.diffuseTexture;\n            this.normalTexture = layerAny.normalTexture;\n        }\n        else\n        {\n            for (let j = 0; j < stage._activeLayers.length; j++)\n            {\n                const texLayer = stage._activeLayers[j];\n\n                if (texLayer.group === normalGroup)\n                {\n                    this.normalTexture = texLayer.getRenderTexture();\n                }\n                if (texLayer.group === diffuseGroup)\n                {\n                    this.diffuseTexture = texLayer.getRenderTexture();\n                }\n            }\n        }\n    }\n\n    static _instance = new LayerFinder();\n}\n"],"names":[],"mappings":";;;;;;;;;;;;MAQa,eAAe,IAAI,MAAM,GAAG,KAAK;MAOjC,cAAc,IAAI,MAAM,GAAG,KAAK;MAOhC,aAAa,IAAI,MAAM,GAAG,KAAK;AAE5C,aAAa,mBAAmB;AAChC,YAAY,mBAAmB;AAKxB,MAAM,eAAN,MACP;AAAA,EADO;AAMH,qBAA0B;AAK1B,0BAAiC;AAKjC,yBAAgC;AAAA;AAAA,EAMhC,MAAM,OACN;AACI,QAAI,KAAK,cAAc,OACvB;AACI;AAAA;AAEJ,SAAK,YAAY;AAEjB,UAAM,QAAQ,MAAM;AACpB,UAAM,WAAW;AAEjB,SAAK,iBAAiB,QAAQ;AAC9B,SAAK,gBAAgB,QAAQ;AAE7B,QAAI,SAAS,kBAAkB,SAAS,eACxC;AACI,WAAK,iBAAiB,SAAS;AAC/B,WAAK,gBAAgB,SAAS;AAAA,WAGlC;AACI,eAAS,IAAI,GAAG,IAAI,MAAM,cAAc,QAAQ,KAChD;AACI,cAAM,WAAW,MAAM,cAAc;AAErC,YAAI,SAAS,UAAU,aACvB;AACI,eAAK,gBAAgB,SAAS;AAAiB;AAEnD,YAAI,SAAS,UAAU,cACvB;AACI,eAAK,iBAAiB,SAAS;AAAiB;AACpD;AACJ;AACJ;AAIR;IA5Da,cAAN;AAAM,YA2DF,YAAY,IAAI;;;;"}